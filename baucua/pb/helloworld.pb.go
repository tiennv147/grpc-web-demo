// Code generated by protoc-gen-go. DO NOT EDIT.
// source: helloworld.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type HelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloRequest) Reset()         { *m = HelloRequest{} }
func (m *HelloRequest) String() string { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()    {}
func (*HelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17b8c58d586b62f2, []int{0}
}

func (m *HelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloRequest.Unmarshal(m, b)
}
func (m *HelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloRequest.Marshal(b, m, deterministic)
}
func (m *HelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloRequest.Merge(m, src)
}
func (m *HelloRequest) XXX_Size() int {
	return xxx_messageInfo_HelloRequest.Size(m)
}
func (m *HelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HelloRequest proto.InternalMessageInfo

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RepeatHelloRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RepeatHelloRequest) Reset()         { *m = RepeatHelloRequest{} }
func (m *RepeatHelloRequest) String() string { return proto.CompactTextString(m) }
func (*RepeatHelloRequest) ProtoMessage()    {}
func (*RepeatHelloRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_17b8c58d586b62f2, []int{1}
}

func (m *RepeatHelloRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepeatHelloRequest.Unmarshal(m, b)
}
func (m *RepeatHelloRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepeatHelloRequest.Marshal(b, m, deterministic)
}
func (m *RepeatHelloRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepeatHelloRequest.Merge(m, src)
}
func (m *RepeatHelloRequest) XXX_Size() int {
	return xxx_messageInfo_RepeatHelloRequest.Size(m)
}
func (m *RepeatHelloRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RepeatHelloRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RepeatHelloRequest proto.InternalMessageInfo

func (m *RepeatHelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RepeatHelloRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type HelloReply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HelloReply) Reset()         { *m = HelloReply{} }
func (m *HelloReply) String() string { return proto.CompactTextString(m) }
func (*HelloReply) ProtoMessage()    {}
func (*HelloReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_17b8c58d586b62f2, []int{2}
}

func (m *HelloReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HelloReply.Unmarshal(m, b)
}
func (m *HelloReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HelloReply.Marshal(b, m, deterministic)
}
func (m *HelloReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HelloReply.Merge(m, src)
}
func (m *HelloReply) XXX_Size() int {
	return xxx_messageInfo_HelloReply.Size(m)
}
func (m *HelloReply) XXX_DiscardUnknown() {
	xxx_messageInfo_HelloReply.DiscardUnknown(m)
}

var xxx_messageInfo_HelloReply proto.InternalMessageInfo

func (m *HelloReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "helloworld.HelloRequest")
	proto.RegisterType((*RepeatHelloRequest)(nil), "helloworld.RepeatHelloRequest")
	proto.RegisterType((*HelloReply)(nil), "helloworld.HelloReply")
}

func init() {
	proto.RegisterFile("helloworld.proto", fileDescriptor_17b8c58d586b62f2)
}

var fileDescriptor_17b8c58d586b62f2 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x50, 0xc1, 0x4a, 0xc4, 0x40,
	0x0c, 0x65, 0xc4, 0x75, 0x35, 0x88, 0x48, 0x10, 0x29, 0x1e, 0x64, 0xe9, 0x41, 0xf6, 0xd2, 0x56,
	0x14, 0xc4, 0x83, 0x78, 0xf0, 0xa2, 0x78, 0xec, 0xde, 0xbc, 0xa5, 0x6d, 0x18, 0x85, 0x99, 0x66,
	0x9c, 0x4e, 0x59, 0xe6, 0x3b, 0xfc, 0x61, 0xd9, 0x6a, 0xb1, 0xa0, 0xb2, 0xb7, 0xbc, 0xe4, 0xbd,
	0xe4, 0xbd, 0xc0, 0xf1, 0x2b, 0x1b, 0x23, 0x6b, 0xf1, 0xa6, 0xc9, 0x9d, 0x97, 0x20, 0x08, 0x3f,
	0x9d, 0x34, 0x85, 0xc3, 0xa7, 0x0d, 0x2a, 0xf9, 0xbd, 0xe7, 0x2e, 0x20, 0xc2, 0x6e, 0x4b, 0x96,
	0x13, 0xb5, 0x50, 0xcb, 0x83, 0x72, 0xa8, 0xd3, 0x7b, 0xc0, 0x92, 0x1d, 0x53, 0xd8, 0xc6, 0xc4,
	0x13, 0x98, 0xd5, 0xd2, 0xb7, 0x21, 0xd9, 0x59, 0xa8, 0xe5, 0xac, 0xfc, 0x02, 0xe9, 0x05, 0xc0,
	0xb7, 0xd2, 0x99, 0x88, 0x09, 0xcc, 0x2d, 0x77, 0x1d, 0xe9, 0x51, 0x3a, 0xc2, 0xab, 0x0f, 0x05,
	0xf3, 0x47, 0xcf, 0x1c, 0xd8, 0xe3, 0x1d, 0xec, 0xaf, 0x28, 0x0e, 0x32, 0x4c, 0xf2, 0x49, 0x84,
	0xa9, 0x87, 0xb3, 0xd3, 0x3f, 0x26, 0x9b, 0x1b, 0xcf, 0x70, 0xb4, 0xa2, 0x38, 0x31, 0x8d, 0xe7,
	0x53, 0xe6, 0xef, 0x34, 0xff, 0x6d, 0xba, 0x54, 0x0f, 0xb7, 0x2f, 0x37, 0xfa, 0x2d, 0x18, 0xaa,
	0xf2, 0x5a, 0x6c, 0x51, 0xfb, 0xe8, 0x82, 0x64, 0x9a, 0x2c, 0x67, 0x4e, 0x7c, 0x20, 0x53, 0x38,
	0x43, 0x51, 0x7b, 0xe9, 0xdb, 0xa6, 0xd0, 0xde, 0xd5, 0xd9, 0x9a, 0xab, 0xac, 0x61, 0x2b, 0xd5,
	0xde, 0xf0, 0xee, 0xeb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb6, 0xb1, 0x87, 0xa6, 0x82, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreeterClient is the client API for Greeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreeterClient interface {
	// unary call
	SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error)
	// server streaming call
	SayRepeatHello(ctx context.Context, in *RepeatHelloRequest, opts ...grpc.CallOption) (Greeter_SayRepeatHelloClient, error)
}

type greeterClient struct {
	cc grpc.ClientConnInterface
}

func NewGreeterClient(cc grpc.ClientConnInterface) GreeterClient {
	return &greeterClient{cc}
}

func (c *greeterClient) SayHello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloReply, error) {
	out := new(HelloReply)
	err := c.cc.Invoke(ctx, "/helloworld.Greeter/SayHello", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greeterClient) SayRepeatHello(ctx context.Context, in *RepeatHelloRequest, opts ...grpc.CallOption) (Greeter_SayRepeatHelloClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Greeter_serviceDesc.Streams[0], "/helloworld.Greeter/SayRepeatHello", opts...)
	if err != nil {
		return nil, err
	}
	x := &greeterSayRepeatHelloClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Greeter_SayRepeatHelloClient interface {
	Recv() (*HelloReply, error)
	grpc.ClientStream
}

type greeterSayRepeatHelloClient struct {
	grpc.ClientStream
}

func (x *greeterSayRepeatHelloClient) Recv() (*HelloReply, error) {
	m := new(HelloReply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreeterServer is the server API for Greeter service.
type GreeterServer interface {
	// unary call
	SayHello(context.Context, *HelloRequest) (*HelloReply, error)
	// server streaming call
	SayRepeatHello(*RepeatHelloRequest, Greeter_SayRepeatHelloServer) error
}

// UnimplementedGreeterServer can be embedded to have forward compatible implementations.
type UnimplementedGreeterServer struct {
}

func (*UnimplementedGreeterServer) SayHello(ctx context.Context, req *HelloRequest) (*HelloReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SayHello not implemented")
}
func (*UnimplementedGreeterServer) SayRepeatHello(req *RepeatHelloRequest, srv Greeter_SayRepeatHelloServer) error {
	return status.Errorf(codes.Unimplemented, "method SayRepeatHello not implemented")
}

func RegisterGreeterServer(s *grpc.Server, srv GreeterServer) {
	s.RegisterService(&_Greeter_serviceDesc, srv)
}

func _Greeter_SayHello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreeterServer).SayHello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/helloworld.Greeter/SayHello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreeterServer).SayHello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Greeter_SayRepeatHello_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RepeatHelloRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreeterServer).SayRepeatHello(m, &greeterSayRepeatHelloServer{stream})
}

type Greeter_SayRepeatHelloServer interface {
	Send(*HelloReply) error
	grpc.ServerStream
}

type greeterSayRepeatHelloServer struct {
	grpc.ServerStream
}

func (x *greeterSayRepeatHelloServer) Send(m *HelloReply) error {
	return x.ServerStream.SendMsg(m)
}

var _Greeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "helloworld.Greeter",
	HandlerType: (*GreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SayHello",
			Handler:    _Greeter_SayHello_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SayRepeatHello",
			Handler:       _Greeter_SayRepeatHello_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "helloworld.proto",
}
